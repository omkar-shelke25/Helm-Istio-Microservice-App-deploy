---
apiVersion: v1
kind: Namespace
metadata:
  name: mongo
---
apiVersion: v1
kind: Namespace
metadata:
  name: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: mongo
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:7.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "admin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: mongo
  labels:
    app: mongodb
  annotations:
    description: "Service to expose the MongoDB deployment"
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-api-to-mongodb
  namespace: mongo
spec:
  podSelector:
    matchLabels:
      app: mongodb
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: api
        - podSelector:
            matchLabels:
              app: user-microservice-app
      ports:
        - protocol: TCP
          port: 27017
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-uri-secret
  namespace: api
type: Opaque
stringData:
  USER_DB_URI: mongodb://admin:password@mongodb.mongo.svc.cluster.local:27017/user_db?authSource=admin
  ORDER_DB_URI: mongodb://admin:password@mongodb.mongo.svc.cluster.local:27017/order_db?authSource=admin
  PAYMENT_DB_URI: mongodb://admin:password@mongodb.mongo.svc.cluster.local:27017/payment_db?authSource=admin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-microservice-deployment
  namespace: api
  labels:
    app: user-microservice-app
  annotations:
    maintainer: "omkar.shelke25"
    description: "Deployment for user microservice with production configurations"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: user-microservice-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: user-microservice-app
      annotations:
        maintainer: "omkar.shelke25"
        description: "Deployment for user microservice with production configurations"
    spec:
      containers:
        - name: user-microservice-app-container
          image: omkara25/simple-microservice-app-user-service:v2
          ports:
            - containerPort: 8001
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-uri-secret
                  key: USER_DB_URI
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: api
  labels:
    app: user-microservice-app
spec:
  selector:
    app: user-microservice-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8001
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-to-mongodb-and-dns
  namespace: api
spec:
  podSelector:
    matchLabels:
      app: user-microservice-app
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: mongo
      ports:
        - protocol: TCP
          port: 27017
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
